// Code generated by counterfeiter. DO NOT EDIT.
package mocks

import (
	"sync"

	"github.com/inference-gateway/a2a/adk"
	"github.com/inference-gateway/a2a/adk/server"
	"github.com/inference-gateway/a2a/adk/server/config"
)

type FakeAgentInfoProvider struct {
	GetAgentCardStub        func(*config.Config) adk.AgentCard
	getAgentCardMutex       sync.RWMutex
	getAgentCardArgsForCall []struct {
		arg1 *config.Config
	}
	getAgentCardReturns struct {
		result1 adk.AgentCard
	}
	getAgentCardReturnsOnCall map[int]struct {
		result1 adk.AgentCard
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeAgentInfoProvider) GetAgentCard(arg1 *config.Config) adk.AgentCard {
	fake.getAgentCardMutex.Lock()
	ret, specificReturn := fake.getAgentCardReturnsOnCall[len(fake.getAgentCardArgsForCall)]
	fake.getAgentCardArgsForCall = append(fake.getAgentCardArgsForCall, struct {
		arg1 *config.Config
	}{arg1})
	stub := fake.GetAgentCardStub
	fakeReturns := fake.getAgentCardReturns
	fake.recordInvocation("GetAgentCard", []interface{}{arg1})
	fake.getAgentCardMutex.Unlock()
	if stub != nil {
		return stub(arg1)
	}
	if specificReturn {
		return ret.result1
	}
	return fakeReturns.result1
}

func (fake *FakeAgentInfoProvider) GetAgentCardCallCount() int {
	fake.getAgentCardMutex.RLock()
	defer fake.getAgentCardMutex.RUnlock()
	return len(fake.getAgentCardArgsForCall)
}

func (fake *FakeAgentInfoProvider) GetAgentCardCalls(stub func(*config.Config) adk.AgentCard) {
	fake.getAgentCardMutex.Lock()
	defer fake.getAgentCardMutex.Unlock()
	fake.GetAgentCardStub = stub
}

func (fake *FakeAgentInfoProvider) GetAgentCardArgsForCall(i int) *config.Config {
	fake.getAgentCardMutex.RLock()
	defer fake.getAgentCardMutex.RUnlock()
	argsForCall := fake.getAgentCardArgsForCall[i]
	return argsForCall.arg1
}

func (fake *FakeAgentInfoProvider) GetAgentCardReturns(result1 adk.AgentCard) {
	fake.getAgentCardMutex.Lock()
	defer fake.getAgentCardMutex.Unlock()
	fake.GetAgentCardStub = nil
	fake.getAgentCardReturns = struct {
		result1 adk.AgentCard
	}{result1}
}

func (fake *FakeAgentInfoProvider) GetAgentCardReturnsOnCall(i int, result1 adk.AgentCard) {
	fake.getAgentCardMutex.Lock()
	defer fake.getAgentCardMutex.Unlock()
	fake.GetAgentCardStub = nil
	if fake.getAgentCardReturnsOnCall == nil {
		fake.getAgentCardReturnsOnCall = make(map[int]struct {
			result1 adk.AgentCard
		})
	}
	fake.getAgentCardReturnsOnCall[i] = struct {
		result1 adk.AgentCard
	}{result1}
}

func (fake *FakeAgentInfoProvider) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.getAgentCardMutex.RLock()
	defer fake.getAgentCardMutex.RUnlock()
	copiedInvocations := map[string][][]interface{}{}
	for key, value := range fake.invocations {
		copiedInvocations[key] = value
	}
	return copiedInvocations
}

func (fake *FakeAgentInfoProvider) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ server.AgentInfoProvider = new(FakeAgentInfoProvider)
